from format_converter import Converter
from transaction import Tx, TxIn
from io import BytesIO
import pytest

def test_convert_endianes_hex_str():
    converter = Converter()
    assert(converter.convert_endianes_hex_str("76a914cb0b589d96c4e88684e39a990712ecdbe3cd727188ac")) == "ac887172cde3dbec1207999ae38486e8c4969d580bcb14a976"


def test_convert_format_satoshi_amounts():
    converter = Converter()
    assert(converter.convert_format_satoshi_amounts(1000)) == "e803000000000000"


def test_tx_parser_version(): 
    raw_tx = bytes.fromhex('0100000001813f79011acb80925dfe69b3def355fe914bd1d96a3f5f71bf8303c6a989c7d1000000006b483045022100ed81ff192e75a3fd2304004dcadb746fa5e24c5031ccfcf21320b0277457c98f02207a986d955c6e0cb35d446a89d3f56100f4d7f67801c31967743a9c8e10615bed01210349fc4e631e3624a545de3f89f5d8684c7b8138bd94bdd531d2e213bf016b278afeffffff02a135ef01000000001976a914bc3b654dca7e56b04dca18f2566cdaf02e8d9ada88ac99c39800000000001976a9141c4bc762dd5423e332166702cb75f40df79fea1288ac19430600')
    stream = BytesIO(raw_tx)
    tx = Tx.parse(stream)
    assert(tx.version) == 1
    assert(len(tx.tx_outs)) == 2


def test_tx_parser_outputlength(): 
    raw_tx = bytes.fromhex('0100000001813f79011acb80925dfe69b3def355fe914bd1d96a3f5f71bf8303c6a989c7d1000000006b483045022100ed81ff192e75a3fd2304004dcadb746fa5e24c5031ccfcf21320b0277457c98f02207a986d955c6e0cb35d446a89d3f56100f4d7f67801c31967743a9c8e10615bed01210349fc4e631e3624a545de3f89f5d8684c7b8138bd94bdd531d2e213bf016b278afeffffff02a135ef01000000001976a914bc3b654dca7e56b04dca18f2566cdaf02e8d9ada88ac99c39800000000001976a9141c4bc762dd5423e332166702cb75f40df79fea1288ac19430600')
    stream = BytesIO(raw_tx)
    tx = Tx.parse(stream)
    assert(len(tx.tx_outs)) == 2


def test_tx_parser_input_tx(): 
    raw_tx = bytes.fromhex('0100000001813f79011acb80925dfe69b3def355fe914bd1d96a3f5f71bf8303c6a989c7d1000000006b483045022100ed81ff192e75a3fd2304004dcadb746fa5e24c5031ccfcf21320b0277457c98f02207a986d955c6e0cb35d446a89d3f56100f4d7f67801c31967743a9c8e10615bed01210349fc4e631e3624a545de3f89f5d8684c7b8138bd94bdd531d2e213bf016b278afeffffff02a135ef01000000001976a914bc3b654dca7e56b04dca18f2566cdaf02e8d9ada88ac99c39800000000001976a9141c4bc762dd5423e332166702cb75f40df79fea1288ac19430600')
    stream = BytesIO(raw_tx)
    tx = Tx.parse(stream)
    assert(f"{tx.tx_ins[0]}") == f"{TxIn(bytes.fromhex('d1c789a9c60383bf715f3f6ad9d14b91fe55f3deb369fe5d9280cb1a01793f81'), 0)}"

    # self parsed transaction
    #01000000
    #01
    #813f79011acb80925dfe69b3def355fe914bd1d96a3f5f71bf8303c6a989c7d1
    #00000000
    #6b 483045022100ed81ff192e75a3fd2304004dcadb746fa5e24c5031ccfcf21320b0277457c98f02207a986d955c6e0cb35d446a89d3f56100f4d7f67801c31967743a9c8e10615bed01210349fc4e631e3624a545de3f89f5d8684c7b8138bd94bdd531d2e213bf016b278a
    #feffffff
    #02
    #a135ef0100000000
    #1976a914bc3b654dca7e56b04dca18f2566cdaf02e8d9ada88ac
    #99c3980000000000
    #1976a9141c4bc762dd5423e332166702cb75f40df79fea1288ac
    #19430600